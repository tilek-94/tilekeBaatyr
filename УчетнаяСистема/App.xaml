<Application x:Class="УчетнаяСистема.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:УчетнаяСистема"
             StartupUri="form_p\Cars_pag.xaml">
    <Application.Resources>
        <Style x:Key="btnCloseOS" TargetType="Button">
            <Setter Property="Width" Value="35"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderThickness" Value="0,0,0,0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Name="border"
                                BorderThickness="0,0,0,0"
                                BorderBrush="Red"
                                Background="White"
                                >
                            <Grid>
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                <Image x:Name="imgClose" Source="images/icon/112.png"/>
                            </Grid>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="White"/>
                                <Setter TargetName="border" Property="Background" Value="#D3E0F8"/>
                                <Setter TargetName="imgClose" Property="Source" Value="images/icon/12.png"/>
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="menuButton" TargetType="Button">
            <Setter Property="Background" Value="White"/>
            <Setter Property="Margin" Value="0,0,0,1"/>
            <Setter Property="Width" Value="120"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Name="border" 
                                BorderThickness="5,0,0,0"
                                BorderBrush="{x:Null}"
                                Background="{x:Null}"
                                >
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="#7F1C82B4"/>
                                <Setter TargetName="border" Property="Background" Value="#7F1C82B4"/>
                                <Setter TargetName="border" Property="BorderThickness" Value="0,0,0,3"/>
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>

                            <Trigger Property="IsFocused" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="White"/>
                                <Setter TargetName="border" Property="Background" Value="#7F1C82B4"/>
                                <Setter TargetName="border" Property="BorderThickness" Value="0,0,0,3"/>
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="menuCom" TargetType="Button">
            <Setter Property="Background" Value="White"/>
            <Setter Property="Margin" Value="0,0,0,1"/>
            <Setter Property="Width" Value="200"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Name="border" 
                                BorderThickness="5,0,0,0"
                                BorderBrush="{x:Null}"
                                Background="{x:Null}"
                                >
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="#7F1C82B4"/>
                                <Setter TargetName="border" Property="Background" Value="#7F1C82B4"/>
                                <Setter TargetName="border" Property="BorderThickness" Value="0,0,0,3"/>
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>

                            <Trigger Property="IsFocused" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="White"/>
                                <Setter TargetName="border" Property="Background" Value="#7F1C82B4"/>
                                <Setter TargetName="border" Property="BorderThickness" Value="0,0,0,3"/>
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="DataGrid" x:Key="grid_xml">
            <!-- Make the border and grid lines a little less imposing -->
            <Setter Property="BorderBrush" Value="#DDDDDD" />
            <Setter Property="HorizontalGridLinesBrush" Value="#DDDDDD" />
            <Setter Property="VerticalGridLinesBrush" Value="#DDDDDD" />
            <Setter Property="ColumnWidth" Value="*"/>
            
            <Setter Property="RowStyle">
                <Setter.Value>
                    <Style TargetType="DataGridRow">
                        <Style.Triggers>
                            <!-- Highlight a grid row as the mouse passes over -->
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="LightCyan" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="CellStyle">
                <Setter.Value>
                    <Style TargetType="DataGridCell">
                       
                        <!-- Add some padding around the contents of a cell -->
                        <Setter Property="Padding" Value="4,3,4,3" />
                        <Setter Property="BorderBrush" Value="Transparent"/>
                        <Setter Property="BorderThickness" Value="1"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="DataGridCell">
                                    <Border Padding="{TemplateBinding Padding}" 
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            Background="{TemplateBinding Background}">
                                        <ContentPresenter />
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="FocusVisualStyle">
                            <Setter.Value>
                                <Style TargetType="Control">
                                    <Setter Property="BorderBrush" Value="Transparent" />
                                </Style>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type DataGridColumnHeader}" x:Key="hederstyle" >
            <Setter Property="Background" Value="White" />
            
            <Setter Property="Height" Value="30"/>
            <Setter Property="BorderBrush" Value="#DBDBDB"/>
            <Setter Property="BorderThickness" Value="0 1 1 1"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="Background" Value="#F4F4F4"/>
        </Style>

        <Style x:Key="placeHolder" TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Grid>
                            <TextBox Text="{Binding Path=Text,
                                                RelativeSource={RelativeSource TemplatedParent}, 
                                                Mode=TwoWay,
                                                UpdateSourceTrigger=PropertyChanged}"
                                 x:Name="textSource" 
                                 Background="Transparent" 
                                 BorderBrush="#FFC1C0C0"  
                                  
                                     BorderThickness="1,1,1,1"
                                 Panel.ZIndex="2" />
                            <Image Source="images/icon/search2.png" Panel.ZIndex="3" HorizontalAlignment="Right"></Image>
                            <TextBox Text="{TemplateBinding Tag}" Background="{TemplateBinding Background}" Panel.ZIndex="1">
                                <TextBox.Style>
                                    <Style TargetType="{x:Type TextBox}">
                                        <Setter Property="Foreground" Value="Transparent"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=Text, Source={x:Reference textSource}}" Value="">
                                                <Setter Property="Foreground" Value="LightGray"/>
                                                <Setter Property="FontSize" Value="14"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="styleLog" TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Grid>
                            <TextBox Text="{Binding Path=Text,
                                                RelativeSource={RelativeSource TemplatedParent}, 
                                                Mode=TwoWay,
                                                UpdateSourceTrigger=PropertyChanged}"
                                 x:Name="textSource" 
                                 Background="Transparent" 
                                 BorderBrush="#FFC1C0C0"  
                             
                                     
                                     BorderThickness="1,1,1,1"
                                 Panel.ZIndex="2" />
                            <Image Source="images/icon/log.png" Panel.ZIndex="3" HorizontalAlignment="Right"></Image>
                            <TextBox Text="{TemplateBinding Tag}" Background="{TemplateBinding Background}" Panel.ZIndex="1">
                                <TextBox.Style>
                                    <Style TargetType="{x:Type TextBox}">
                                        <Setter Property="Foreground" Value="Transparent"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=Text, Source={x:Reference textSource}}" Value="">
                                                <Setter Property="Foreground" Value="LightGray"/>
                                                <Setter Property="FontSize" Value="14"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="stylePass" TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Grid>
                            <TextBox Text="{Binding Path=Text,
                                                RelativeSource={RelativeSource TemplatedParent}, 
                                                Mode=TwoWay,
                                                UpdateSourceTrigger=PropertyChanged}"
                                 x:Name="textSource" 
                                 Background="Transparent" 
                                 BorderBrush="#FFC1C0C0"  
                                  
                                     BorderThickness="1,1,1,1"
                                 Panel.ZIndex="2" />
                            <Image Source="images/icon/pass.png" Panel.ZIndex="3" HorizontalAlignment="Right"></Image>
                            <TextBox Text="{TemplateBinding Tag}" Background="{TemplateBinding Background}" Panel.ZIndex="1">
                                <TextBox.Style>
                                    <Style TargetType="{x:Type TextBox}">
                                        <Setter Property="Foreground" Value="Transparent"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=Text, Source={x:Reference textSource}}" Value="">
                                                <Setter Property="Foreground" Value="LightGray"/>
                                                <Setter Property="FontSize" Value="14"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <Style x:Key="textbox_style" TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Grid>
                            <TextBox Text="{Binding Path=Text,
                                                RelativeSource={RelativeSource TemplatedParent}, 
                                                Mode=TwoWay,
                                                UpdateSourceTrigger=PropertyChanged}"
                                 x:Name="textSource" 
                                 Background="Transparent" 
                                 BorderBrush="#FFC1C0C0"  
                                  
                                     BorderThickness="1,1,1,1"
                                 Panel.ZIndex="2" />
                            <TextBox Text="{TemplateBinding Tag}" Background="{TemplateBinding Background}" Panel.ZIndex="1">
                                <TextBox.Style>
                                    <Style TargetType="{x:Type TextBox}">
                                        <Setter Property="Foreground" Value="Transparent"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=Text, Source={x:Reference textSource}}" Value="">
                                                <Setter Property="Foreground" Value="LightGray"/>
                                                <Setter Property="FontSize" Value="14"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="styleDatePicker" TargetType="{x:Type DatePicker}">
            <Setter Property="BorderBrush" Value="#FFC1C0C0"/>
            
        </Style>
        
        <!--Добавить кнопкасына стил-->
        <Style x:Key="Button_Add" TargetType="Button">
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Name="border" 
                                BorderThickness="0,0,0,0"
                                CornerRadius="5"
                                BorderBrush="{x:Null}"
                                Background="#0A6E9E"
                                >
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Content="{TemplateBinding Content}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="#0A6E9E"/>
                                <Setter TargetName="border" Property="Background" Value="White"/>
                                <Setter TargetName="border" Property="BorderThickness" Value="2,2,2,2"/>
                                <Setter  Property="Foreground" Value="#0A6E9E"/>
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style x:Key="Button_blue" TargetType="Button">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Name="border" 
                                BorderThickness="0,0,0,0"
                                CornerRadius="5"
                                BorderBrush="{x:Null}"
                                Background="#0A6E9E"
                                >
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Content="{TemplateBinding Content}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="#0A6E9E"/>
                                <Setter TargetName="border" Property="Background" Value="White"/>
                                <Setter TargetName="border" Property="BorderThickness" Value="2,2,2,2"/>
                                <Setter  Property="Foreground" Value="#0A6E9E"/>
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="Button_White" TargetType="Button">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Foreground" Value="#0A6E9E"/>
            <Setter Property="Foreground" Value="#0A6E9E"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Name="border" 
                                BorderThickness="2,2,2,2"
                                CornerRadius="5"
                                BorderBrush="#0A6E9E"
                                Background="White"
                                >
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="#0A6E9E"/>
                                <Setter TargetName="border" Property="Background" Value="#0A6E9E"/>
                                <Setter  Property="Foreground" Value="White"/>
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


          <!--Динамик суроттордун стили-->
        <Style x:Key="Dynamik_Image" TargetType="Image">

            
            <Setter Property="Width" Value="180"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Source" Value="../images/dom2.png"/>

                </Trigger>
            </Style.Triggers>
        </Style>

    </Application.Resources>
</Application>
